{
  "name": "radium-plugin-prefix-all",
  "version": "1.0.1",
  "description": "Radium plugin that adds all vendor prefixes",
  "main": "lib/index.js",
  "files": [
    "LICENSE",
    "README.md",
    "lib/"
  ],
  "scripts": {
    "test": "npm run build && mocha --recursive --compilers js:babel-core/register",
    "build": "babel modules --out-dir lib",
    "release": "npm run build && npm publish"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rofrischmann/radium-plugin-prefix-all"
  },
  "keywords": [
    "radium",
    "radium-plugin",
    "plugin",
    "react",
    "inline-styles",
    "prefixer",
    "vendor prefixes"
  ],
  "author": {
    "name": "Robin Frischmann"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/rofrischmann/radium-plugin-prefix-all/issues"
  },
  "devDependencies": {
    "babel": "^6.1.18",
    "babel-cli": "^6.2.0",
    "babel-core": "^6.2.1",
    "babel-plugin-add-module-exports": "^0.1.1",
    "babel-preset-es2015": "^6.1.18",
    "chai": "^3.4.1",
    "mocha": "^2.3.4",
    "rimraf": "^2.4.4",
    "sinon": "^1.17.2",
    "sinon-chai": "^2.8.0"
  },
  "dependencies": {
    "inline-style-prefixer": "^0.6.2"
  },
  "readme": "# radium-plugin-prefix-all\n```bash\nnpm install radium-plugin-prefix-all --save\n```\nRadium plugin that adds all vendor prefixes independent of which userAgent was passed. It works similar to [Autoprefixer](https://github.com/postcss/autoprefixer) which also adds every possible vendor prefix, but uses [inline-style-prefixer](https://github.com/rofrischmann/inline-style-prefixer): a prefixer especially for inline styles written in javascript.\n\n## Warning\nFor now it does not resolve [special plugins](https://github.com/rofrischmann/inline-style-prefixer#special-plugins) such as legacy specifications of flexbox. Therefore be sure to also include Radium's default prefixer which is also based on [inline-style-prefixer](https://github.com/rofrischmann/inline-style-prefixer)  to resolve those.\n\n#### Opera prefixes\nIt will not add Opera's `O`-prefix since Opera switched to `Webkit` since version 15.\n\n## What you get\n```javascript\n// input\n{\n\tflexDirection: 'row'\n}\n\n// output\n{\n\tWebkitFlexDirection: 'row',\n\tMozFlexDirection: 'row',\n\tmsFlexDirection: 'row',\n\tflexDirection: 'row'\n}\n```\n\n## Usage\n> NOTE: This usage guide was directly copied from one of [Ian Obermiller](https://github.com/ianobermiller) (Radium maintainer)'s Radium [Plugins](https://github.com/ianobermiller/radium-plugin-validity-pseudos).\n\n`radium-plugin-prefix-all` should be added directly after Radium's build-in  `Radium.Plugins.prefix`. Radium plugins are setup by passing a config object to `@Radium`. Since you'll d probably want to use this plugin everywhere you use Radium, you can create your own module with a configured version of Radium:\n\n`ConfiguredRadium.js`\n\n```js\nvar Radium = require('radium');\nvar prefixAll = require('radium-plugin-prefix-all');\n\nfunction ConfiguredRadium(component) {\n  return Radium({\n    plugins: [\n      Radium.Plugins.mergeStyleArray,\n      Radium.Plugins.checkProps,\n      Radium.Plugins.resolveMediaQueries,\n      Radium.Plugins.resolveInteractionStyles,\n      Radium.Plugins.prefix,\n\n\t\t\tprefixAll,\n\n      Radium.Plugins.checkProps\n    ]\n  })(component);\n}\n\nmodule.exports = ConfiguredRadium;\n\n```\n\nThen you just use `@ConfiguredRadium` instead of `@Radium`. Or `ConfiguredRadium(MyComponent)` instead of `Radium(MyComponent)`.\n\n```js\n@ConfiguredRadium\nclass MyComponent extends Component {\n  // ...\n}\n```\n",
  "readmeFilename": "README.md",
  "_id": "radium-plugin-prefix-all@1.0.1",
  "dist": {
    "shasum": "bad9d6f2de0121a6900dcbbef2b12ccedcc45af1"
  },
  "_from": "radium-plugin-prefix-all@^1.0.1",
  "_resolved": "https://registry.npmjs.org/radium-plugin-prefix-all/-/radium-plugin-prefix-all-1.0.1.tgz"
}
